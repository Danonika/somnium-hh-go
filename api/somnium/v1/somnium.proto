syntax = "proto3";

package somniumsystem.v1;

option go_package="somniumsystem/pkg/v1;somniumsystem";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto"; // REST описание методов
import "google/api/field_behavior.proto";   
import "protoc-gen-openapiv2/options/annotations.proto"; // openapiv2 спецификация

// Define the message types
message UserInfo{
    string Email = 1;
    string Name = 2;
    string ContactNum = 3;
    string ResumeTitle = 4;
    string ResumeLink = 5;
    repeated string Skills = 6;
}
message JobInfo{
    string JobID = 1;
    string Title = 2;
    string Salary =  3;
    string Category = 4;
    string Descr = 5;
    string Location = 6;
    string ContactNum = 7;
    string ContactEmail = 8;
    google.protobuf.Timestamp Date = 9;
    google.protobuf.Timestamp Expiry = 10;
    repeated string Skills = 11;
    string Status = 12;
    int32 Count = 13;
}

message SignInRequest{
    string Email = 1;
    string Password = 2;
}
message SignInResponse{
    string AccessToken = 1;
}
message SignUpRequest{
    string Email = 1;
    string Password = 2;
}
message SignUpResponse{
    string AccessToken = 1;
}
message UpdateUserRequest{
    string UserID = 1;
    UserInfo UserInfo = 2;
}
message GetUserRequest{
    string UserID = 1;
}
message GetUserResponse{
    UserInfo UserInfo = 1;
}
message AddSkillRequest{
    string Skill = 1;
}
message SkillPoolResponse{
    repeated string Skills = 1;
}
message GetJobRequest{
    string JobID = 1;
}
message GetJobResponse{
    JobInfo JobInfo = 1;
}
message AddJobRequest{
    string Title = 1;
    string Salary =  2;
    string Category = 3;
    string Descr = 4;
    string Location = 5;
    string ContactNum = 6;
    string ContactEmai = 7;
    google.protobuf.Timestamp Expiry = 8;
    repeated string Skills = 9;
    string Status = 10;
}
message AddJobResponse{
    string JobID = 1;
}
message DeleteJobRequest{
    string JobID = 1;
}
message UpdateJobRequest{
    string JobID = 1;
    JobInfo JobInfo = 2;
}
message ListJobResponse{
    repeated JobInfo Jobs = 1;
}
message JobSwitcherRequest{
    string JobID = 1;
}
message SearchRequest{
    string Location = 1;
    string Category = 2;
    string Title = 3;
    google.protobuf.Timestamp date = 4;
}
message SearchResponse{
    repeated JobInfo jobs = 1;
}
message ApplyRequest{
    string UserID = 1;
    string JobID = 2;
}
message ApplyHistoryRequest{
    string UserID = 1;
}
message ApplyHistoryResponse{
    repeated JobInfo jobs = 1;
}
service SomniumService {
    // Authentication
    rpc SignIn (SignInRequest) returns (SignInResponse){
        option (google.api.http) = {
            post: "/auth/signin"
            body: "*"
        };
    }
    rpc SignUp (SignUpRequest) returns (SignUpResponse){
        option (google.api.http) = {
            post: "/auth/signup"
            body:"*"
        };
    }
    
    // UserInfo
    rpc GetUser (GetUserRequest) returns (GetUserResponse){
        option (google.api.http) = {
            get: "/user/{UserID}"
        };
    }
    rpc UpdateUser (UpdateUserRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            patch:"/user/update"
            body: "*"
        };
    }
    // Skills
    rpc AddSkill(AddSkillRequest) returns(google.protobuf.Empty){
        option (google.api.http) = {
            post: "/skill/add"
            body: "*"
        };
    }
    rpc SkillPool (google.protobuf.Empty) returns(SkillPoolResponse){
        option (google.api.http) = {
            get:"/skills"
        };
    }
    // JobInfo
    
    rpc GetJob (GetJobRequest) returns (GetJobResponse){
        option (google.api.http) = {
            get: "/job/{JobID}"
        };
    }
    rpc AddJob (AddJobRequest) returns (AddJobResponse){
        option (google.api.http) = {
            post: "/job/add"
            body: "*"
        };
    }
    
    rpc DeleteJob (DeleteJobRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            delete: "/job/remove/{JobID}"
        };
    }
    rpc UpdateJob (UpdateJobRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            patch: "/job/update"
            body: "*"
        };
    }
    
    rpc ListJob (google.protobuf.Empty) returns (ListJobResponse){
        option (google.api.http) = {
            get: "/jobs"
        };
    }
    rpc JobSwitcher(JobSwitcherRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            get: "/job/switch/{JobID}"
        };
    }
    rpc Apply (ApplyRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            post: "/job/apply"
            body: "*"
        };
    }
    rpc ApplyHistory (ApplyHistoryRequest) returns (ApplyHistoryResponse){
        option (google.api.http) = {
            get: "/user/{UserID}/history"
        };
    }

    /*
    rpc Search (SearchRequest) returns (SearchResponse){
        option (google.api.http) = {
            post: "/job/search"
            body: "*"
        };
    }*/
    /*
    rpc Recommendation (google.protobuf.Empty) returns (RecommendationResponse){
        option (google.api.http) = {
            get: "/job/hot"
        };
    }

     PDF
    rpc ExportJob (ExportJobRequest) returns ExportJobResponse{

    }*/
}

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Somnium System";
    version: "1.0.0";
    contact: {
      name: "Danonika";
    }
  };
  security_definitions: {
    security: {
      key: "Bearer";
      value: {
	  type: TYPE_API_KEY;
	  in: IN_HEADER;
	  name: "authorization";
	  description: "Authentication token, prefixed by Bearer"
	  }
    }
  };
  security: {
    security_requirement: {
      key: "Bearer";
    }
  };
};
